var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _ComponentPosts = require("/Component/Posts");
  var _ComponentPostsDefault = _parcelHelpers.interopDefault(_ComponentPosts);
  require("./AddPost");
  var _jsxFileName = "/Users/kish_deemu/WebstormProjects/AF_labs_2021/Lab7/Component/PostHolder.jsx";
  // const changed to var which can be accessed globally
  // otherwise push method has no effect
  var posts = [{
    id: 1,
    name: 'React',
    description: 'Best UI Library'
  }, {
    id: 2,
    name: 'Node',
    description: 'Server side JS'
  }];
  class PostHolder extends _reactDefault.default.Component {
    constructor(props) {
      super(props);
      this.addNewPost = this.addNewPost.bind(this);
    }
    componentDidMount() {
      this.addNewPost = this.addNewPost.bind(this);
    }
    render() {
      console.log("renders >" + JSON.stringify(posts) + "< end render");
      // return <h1>Hello to React</h1>
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_ComponentPostsDefault.default, {
          posts: posts,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 27,
            columnNumber: 16
          }
        })
      );
    }
    addNewPost({name, description}) {
      // console.log("Before Pushing: "+JSON.stringify(posts));
      posts.push({
        id: posts.length + 1,
        name,
        description
      });
    }
  }
  exports.default = PostHolder;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
